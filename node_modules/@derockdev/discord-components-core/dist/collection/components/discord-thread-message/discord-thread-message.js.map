{"version":3,"file":"discord-thread-message.js","sourceRoot":"","sources":["../../../src/components/discord-thread-message/discord-thread-message.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAsB,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AACtF,OAAO,QAAQ,MAAM,gBAAgB,CAAC;AACtC,OAAO,EAAE,OAAO,EAAW,QAAQ,EAAE,MAAM,eAAe,CAAC;AAC3D,OAAO,YAAY,MAAM,uBAAuB,CAAC;AAMjD,MAAM,OAAO,oBAAoB;;;kBAkBhB,MAAM;;eAaT,KAAK;kBAOF,KAAK;oBAOH,KAAK;kBAMP,KAAK;;6BAYM,QAAQ;;EAE5B,MAAM;;IACZ,MAAM,aAAa,GAAG,CAAC,MAAc,EAAU,EAAE,eAAC,OAAA,MAAA,MAAA,OAAO,CAAC,MAAM,CAAC,mCAAI,MAAM,mCAAI,OAAO,CAAC,OAAO,CAAA,EAAA,CAAC;IAE/F,MAAM,WAAW,GAAY,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC;IAC7I,MAAM,WAAW,GAAY,MAAA,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,mCAAI,EAAE,CAAC;IACvE,MAAM,OAAO,iDAAiB,WAAW,GAAK,WAAW,GAAK,EAAE,MAAM,EAAE,aAAa,CAAC,MAAA,WAAW,CAAC,MAAM,mCAAI,IAAI,CAAC,MAAM,CAAC,EAAE,CAAE,CAAC;IAE7H,OAAO,CACN,EAAC,IAAI,IAAC,KAAK,EAAC,wBAAwB;MACnC,WAAK,GAAG,EAAE,OAAO,CAAC,MAAM,EAAE,KAAK,EAAC,+BAA+B,EAAC,GAAG,EAAE,OAAO,CAAC,MAAM,GAAI;MACvF,EAAC,QAAQ;QACP,OAAO,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,CAClC,YAAM,KAAK,EAAC,yBAAyB;UACnC,OAAO,CAAC,QAAQ,IAAI,EAAC,YAAY,OAAG;gBAE/B,CACP;QACA,OAAO,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,YAAM,KAAK,EAAC,yBAAyB,aAAc,CAC5E;MACX,YAAM,KAAK,EAAC,iCAAiC,EAAC,KAAK,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,SAAS,EAAE,IAC/E,OAAO,CAAC,MAAM,CACT;MACP,WAAK,KAAK,EAAC,gCAAgC;QAC1C,eAAQ;QACP,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,YAAM,KAAK,EAAC,wBAAwB,eAAgB,CAAC,CAAC,CAAC,EAAE,CACnE;MACN,YAAM,KAAK,EAAC,kCAAkC,IAAE,IAAI,CAAC,iBAAiB,CAAQ,CACxE,CACP,CAAC;EACH,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACD","sourcesContent":["import { Component, ComponentInterface, Element, h, Host, Prop } from '@stencil/core';\nimport Fragment from '../../Fragment';\nimport { avatars, Profile, profiles } from '../../options';\nimport VerifiedTick from '../svgs/verified-tick';\n\n@Component({\n\ttag: 'discord-thread-message',\n\tstyleUrl: 'discord-thread-message.css'\n})\nexport class DiscordThreadMessage implements ComponentInterface {\n\t/**\n\t * The DiscordThreadMessage element.\n\t */\n\t@Element()\n\tpublic el: HTMLElement;\n\n\t/**\n\t * The id of the profile data to use.\n\t */\n\t@Prop()\n\tpublic profile: string;\n\n\t/**\n\t * The message author's username.\n\t * @default 'User'\n\t */\n\t@Prop()\n\tpublic author = 'User';\n\n\t/**\n\t * The message author's avatar. Can be an avatar shortcut, relative path, or external link.\n\t */\n\t@Prop()\n\tpublic avatar: string;\n\n\t/**\n\t * Whether the message author is a bot or not.\n\t * Only works if `server` is `false` or `undefined`.\n\t */\n\t@Prop()\n\tpublic bot = false;\n\n\t/**\n\t * Whether the message author is a server crosspost webhook or not.\n\t * Only works if `bot` is `false` or `undefined`.\n\t */\n\t@Prop()\n\tpublic server = false;\n\n\t/**\n\t * Whether the bot is verified or not.\n\t * Only works if `bot` is `true`\n\t */\n\t@Prop()\n\tpublic verified = false;\n\n\t/**\n\t * Whether the message has been edited or not.\n\t */\n\t@Prop()\n\tpublic edited = false;\n\n\t/**\n\t * The message author's primary role color. Can be any [CSS color value](https://www.w3schools.com/cssref/css_colors_legal.asp).\n\t */\n\t@Prop()\n\tpublic roleColor: string;\n\n\t/**\n\t * The relative timestamp of the message.\n\t */\n\t@Prop()\n\tpublic relativeTimestamp = '1m ago';\n\n\tpublic render() {\n\t\tconst resolveAvatar = (avatar: string): string => avatars[avatar] ?? avatar ?? avatars.default;\n\n\t\tconst defaultData: Profile = { author: this.author, bot: this.bot, verified: this.verified, server: this.server, roleColor: this.roleColor };\n\t\tconst profileData: Profile = Reflect.get(profiles, this.profile) ?? {};\n\t\tconst profile: Profile = { ...defaultData, ...profileData, ...{ avatar: resolveAvatar(profileData.avatar ?? this.avatar) } };\n\n\t\treturn (\n\t\t\t<Host class=\"discord-thread-message\">\n\t\t\t\t<img src={profile.avatar} class=\"discord-thread-message-avatar\" alt={profile.author} />\n\t\t\t\t<Fragment>\n\t\t\t\t\t{profile.bot && !profile.server && (\n\t\t\t\t\t\t<span class=\"discord-application-tag\">\n\t\t\t\t\t\t\t{profile.verified && <VerifiedTick />}\n\t\t\t\t\t\t\tBot\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)}\n\t\t\t\t\t{profile.server && !profile.bot && <span class=\"discord-application-tag\">Server</span>}\n\t\t\t\t</Fragment>\n\t\t\t\t<span class=\"discord-thread-message-username\" style={{ color: profile.roleColor }}>\n\t\t\t\t\t{profile.author}\n\t\t\t\t</span>\n\t\t\t\t<div class=\"discord-thread-message-content\">\n\t\t\t\t\t<slot />\n\t\t\t\t\t{this.edited ? <span class=\"discord-message-edited\">(edited)</span> : ''}\n\t\t\t\t</div>\n\t\t\t\t<span class=\"discord-thread-message-timestamp\">{this.relativeTimestamp}</span>\n\t\t\t</Host>\n\t\t);\n\t}\n}\n"]}