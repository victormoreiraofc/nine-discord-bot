{"version":3,"file":"author-info.js","sourceRoot":"","sources":["../../../src/components/author-info/author-info.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAuB,CAAC,EAAE,MAAM,eAAe,CAAC;AACvD,OAAO,QAAQ,MAAM,gBAAgB,CAAC;AACtC,OAAO,YAAY,MAAM,uBAAuB,CAAC;AAyCjD,MAAM,CAAC,MAAM,UAAU,GAAyC,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,CAClJ,YAAM,KAAK,EAAC,qBAAqB;EAC/B,CAAC,OAAO,IAAI,CACZ,EAAC,QAAQ;IACR,YAAM,KAAK,EAAC,yBAAyB,EAAC,KAAK,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,IAC/D,MAAM,CACD;IACN,QAAQ,IAAI,WAAK,KAAK,EAAC,0BAA0B,EAAC,GAAG,EAAE,QAAQ,EAAE,MAAM,EAAC,IAAI,EAAC,KAAK,EAAC,IAAI,EAAC,GAAG,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,GAAI,CAClH,CACX;EAEA,EAAC,QAAQ;IAEP,GAAG,IAAI,CAAC,MAAM,IAAI,CAClB,YAAM,KAAK,EAAC,yBAAyB;MAEnC,QAAQ,IAAI,EAAC,YAAY,OAAG;YAEvB,CACP;IACA,MAAM,IAAI,CAAC,GAAG,IAAI,YAAM,KAAK,EAAC,yBAAyB,aAAc;IACrE,EAAE,IAAI,YAAM,KAAK,EAAC,oDAAoD,SAAU,CACvE;EAEX,OAAO,IAAI,CACX,YAAM,KAAK,EAAC,yBAAyB,EAAC,KAAK,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,IAC/D,MAAM,CACD,CACP,CACK,CACP,CAAC","sourcesContent":["import { FunctionalComponent, h } from '@stencil/core';\nimport Fragment from '../../Fragment';\nimport VerifiedTick from '../svgs/verified-tick';\n\ninterface AuthorInfoProps {\n\t/**\n\t * The name of the author\n\t */\n\tauthor: string;\n\t/**\n\t * Whether this author is a bot. Only works if `server` is `false` or `undefined`.\n\t */\n\tbot: boolean;\n\t/**\n\t * Whether this author is a `server` crosspost webhook. Only works if `bot` is `false` or `undefined`.\n\t */\n\tserver: boolean;\n\t/**\n\t * Whether this author is the original poster.\n\t */\n\top: boolean;\n\t/**\n\t * The colour of the author, which comes from their highest role\n\t */\n\troleColor: string;\n\t/**\n\t * The role icon of the author, which comes from their highest role\n\t */\n\troleIcon: string;\n\t/**\n\t * The role name of the author, which comes from their highest role\n\t */\n\troleName: string;\n\t/**\n\t * Whether this bot is verified by Discord. Only works if `bot` is `true`\n\t */\n\tverified: boolean;\n\t/**\n\t * Whether to reverse the order of the author info for compact mode.\n\t */\n\tcompact: boolean;\n}\n\nexport const AuthorInfo: FunctionalComponent<AuthorInfoProps> = ({ author, bot, server, op, roleColor, roleIcon, roleName, verified, compact }) => (\n\t<span class=\"discord-author-info\">\n\t\t{!compact && (\n\t\t\t<Fragment>\n\t\t\t\t<span class=\"discord-author-username\" style={{ color: roleColor }}>\n\t\t\t\t\t{author}\n\t\t\t\t</span>\n\t\t\t\t{roleIcon && <img class=\"discord-author-role-icon\" src={roleIcon} height=\"20\" width=\"20\" alt={roleName} draggable={false} />}\n\t\t\t</Fragment>\n\t\t)}\n\t\t{\n\t\t\t<Fragment>\n\t\t\t\t{/* If bot is true then we need to render a Bot tag */}\n\t\t\t\t{bot && !server && (\n\t\t\t\t\t<span class=\"discord-application-tag\">\n\t\t\t\t\t\t{/* If verified is true then a verified checkmark should be prefixed */}\n\t\t\t\t\t\t{verified && <VerifiedTick />}\n\t\t\t\t\t\tBot\n\t\t\t\t\t</span>\n\t\t\t\t)}\n\t\t\t\t{server && !bot && <span class=\"discord-application-tag\">Server</span>}\n\t\t\t\t{op && <span class=\"discord-application-tag discord-application-tag-op\">OP</span>}\n\t\t\t</Fragment>\n\t\t}\n\t\t{compact && (\n\t\t\t<span class=\"discord-author-username\" style={{ color: roleColor }}>\n\t\t\t\t{author}\n\t\t\t</span>\n\t\t)}\n\t</span>\n);\n"]}