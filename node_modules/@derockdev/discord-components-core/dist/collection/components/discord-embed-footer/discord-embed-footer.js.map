{"version":3,"file":"discord-embed-footer.js","sourceRoot":"","sources":["../../../src/components/discord-embed-footer/discord-embed-footer.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAsB,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAC7F,OAAO,QAAQ,MAAM,gBAAgB,CAAC;AACtC,OAAO,EAAoB,eAAe,EAAE,MAAM,YAAY,CAAC;AAM/D,MAAM,OAAO,kBAAkB;;;;;EAoBvB,eAAe,CAAC,KAAwB;IAC9C,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC;MAAE,OAAO,IAAI,CAAC;IAC5D,OAAO,eAAe,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;EACzC,CAAC;EAEM,mBAAmB;IACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;EACvD,CAAC;EAEM,MAAM;IACZ,MAAM,MAAM,GAA+B,IAAI,CAAC,EAAE,CAAC,aAA2C,CAAC;IAE/F,IAAI,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,KAAK,EAAE;MAC3C,MAAM,IAAI,KAAK,CAAC,mFAAmF,CAAC,CAAC;KACrG;IAED,OAAO,CACN,EAAC,IAAI,IAAC,KAAK,EAAC,sBAAsB;MAChC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,WAAK,GAAG,EAAE,IAAI,CAAC,WAAW,EAAE,GAAG,EAAC,EAAE,EAAC,KAAK,EAAC,sBAAsB,GAAG,CAAC,CAAC,CAAC,EAAE;MAC3F,EAAC,QAAQ;QACR,eAAa;QACZ,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,YAAM,KAAK,EAAC,0BAA0B,aAAc,CAAC,CAAC,CAAC,EAAE;QAC1E,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAC,QAAQ,QAAE,IAAI,CAAC,SAAS,CAAY,CAAC,CAAC,CAAC,EAAE,CAClD,CACL,CACP,CAAC;EACH,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACD","sourcesContent":["import { Component, ComponentInterface, Element, h, Host, Prop, Watch } from '@stencil/core';\nimport Fragment from '../../Fragment';\nimport { DiscordTimestamp, handleTimestamp } from '../../util';\n\n@Component({\n\ttag: 'discord-embed-footer',\n\tstyleUrl: 'discord-embed-footer.css'\n})\nexport class DiscordEmbedFooter implements ComponentInterface {\n\t/**\n\t * The DiscordEmbedFooter element.\n\t */\n\t@Element()\n\tpublic el: HTMLElement;\n\n\t/**\n\t * The image to use next to the footer text.\n\t */\n\t@Prop()\n\tpublic footerImage: string;\n\n\t/**\n\t * The timestamp to use for the message date. When supplying a string, the format must be `01/31/2000`.\n\t */\n\t@Prop({ mutable: true, reflect: true })\n\tpublic timestamp?: DiscordTimestamp;\n\n\t@Watch('timestamp')\n\tpublic updateTimestamp(value?: DiscordTimestamp): string | null {\n\t\tif (!value || isNaN(new Date(value).getTime())) return null;\n\t\treturn handleTimestamp(new Date(value));\n\t}\n\n\tpublic componentWillRender() {\n\t\tthis.timestamp = this.updateTimestamp(this.timestamp);\n\t}\n\n\tpublic render() {\n\t\tconst parent: HTMLDiscordMessagesElement = this.el.parentElement as HTMLDiscordMessagesElement;\n\n\t\tif (parent.tagName.toLowerCase() !== 'div') {\n\t\t\tthrow new Error('All <discord-embed-footer> components must be direct children of <discord-embed>.');\n\t\t}\n\n\t\treturn (\n\t\t\t<Host class=\"discord-embed-footer\">\n\t\t\t\t{this.footerImage ? <img src={this.footerImage} alt=\"\" class=\"discord-footer-image\" /> : ''}\n\t\t\t\t<Fragment>\n\t\t\t\t\t<slot></slot>\n\t\t\t\t\t{this.timestamp ? <span class=\"discord-footer-separator\">&bull;</span> : ''}\n\t\t\t\t\t{this.timestamp ? <Fragment>{this.timestamp}</Fragment> : ''}\n\t\t\t\t</Fragment>\n\t\t\t</Host>\n\t\t);\n\t}\n}\n"]}