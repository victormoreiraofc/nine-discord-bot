{"version":3,"file":"discord-custom-emoji.js","sourceRoot":"","sources":["../../../src/components/discord-custom-emoji/discord-custom-emoji.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAsB,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAChF,OAAO,EAAE,iBAAiB,EAAE,MAAM,YAAY,CAAC;AAM/C,MAAM,OAAO,kBAAkB;;;;;sBA8BV,KAAK;;EAElB,mBAAmB;;IACzB,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;MACpC,MAAM,eAAe,GAAG,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;MAErD,IAAI,eAAe,EAAE;QACpB,MAAA,IAAI,CAAC,GAAG,oCAAR,IAAI,CAAC,GAAG,GAAK,MAAA,eAAe,CAAC,GAAG,mCAAI,EAAE,EAAC;QACvC,MAAA,IAAI,CAAC,UAAU,oCAAf,IAAI,CAAC,UAAU,GAAK,MAAA,eAAe,CAAC,UAAU,mCAAI,KAAK,EAAC;OACxD;KACD;EACF,CAAC;EAEM,MAAM;IACZ,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC;IAC9B,MAAM,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,4BAA4B,CAAC,CAAC,CAAC,sBAAsB,CAAC;IAC/F,IAAI,mBAAmB,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,kCAAkC,CAAC,CAAC,CAAC,4BAA4B,CAAC;IAE9G,IAAI,IAAI,CAAC,UAAU,EAAE;MACpB,mBAAmB,IAAI,mCAAmC,CAAC;KAC3D;IAED,OAAO,CACN,YAAM,KAAK,EAAE,cAAc;MAC1B,yBAAiB,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,mBAAmB,GAAI,CAC3F,CACP,CAAC;EACH,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACD","sourcesContent":["import { Component, ComponentInterface, Element, h, Prop } from '@stencil/core';\nimport { getGlobalEmojiUrl } from '../../util';\n\n@Component({\n\ttag: 'discord-custom-emoji',\n\tstyleUrl: 'discord-custom-emoji.css'\n})\nexport class DiscordCustomEmoji implements ComponentInterface {\n\t/**\n\t * The DiscordReaction element.\n\t */\n\t@Element()\n\tpublic el: HTMLElement;\n\n\t/**\n\t * The name of the emoji\n\t */\n\t@Prop()\n\tpublic name: string;\n\n\t/**\n\t * The emoji URL to use in the message.\n\t */\n\t@Prop({ mutable: true })\n\tpublic url: string;\n\n\t/**\n\t * Determines whether or not the emoji is used in an embed, or a message.\n\t * If it is used in an embed, the sizing is adjusted accordingly.\n\t */\n\t@Prop({ mutable: true })\n\tpublic embedEmoji: boolean;\n\n\t/**\n\t * The emoji size\n\t */\n\t@Prop()\n\tpublic largeEmoji = false;\n\n\tpublic componentWillRender() {\n\t\tif (!this.url && Boolean(this.name)) {\n\t\t\tconst emojiFromGlobal = getGlobalEmojiUrl(this.name);\n\n\t\t\tif (emojiFromGlobal) {\n\t\t\t\tthis.url ??= emojiFromGlobal.url ?? '';\n\t\t\t\tthis.embedEmoji ??= emojiFromGlobal.embedEmoji ?? false;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic render() {\n\t\tconst name = `:${this.name}:`;\n\t\tconst emojiClassName = this.embedEmoji ? 'discord-embed-custom-emoji' : 'discord-custom-emoji';\n\t\tlet emojiImageClassName = this.embedEmoji ? 'discord-embed-custom-emoji-image' : 'discord-custom-emoji-image';\n\n\t\tif (this.largeEmoji) {\n\t\t\temojiImageClassName += ' discord-custom-emoji-image-large';\n\t\t}\n\n\t\treturn (\n\t\t\t<span class={emojiClassName}>\n\t\t\t\t<img aria-label={name} src={this.url} alt={name} draggable={false} class={emojiImageClassName} />\n\t\t\t</span>\n\t\t);\n\t}\n}\n"]}