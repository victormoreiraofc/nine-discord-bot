{"version":3,"file":"discord-mention.js","sourceRoot":"","sources":["../../../src/components/discord-mention/discord-mention.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, ComponentInterface, Element, h, Host, Prop, Watch } from '@stencil/core';\nimport hexToRgba from 'hex-to-rgba';\nimport ChannelForum from '../svgs/channel-forum';\nimport ChannelIcon from '../svgs/channel-icon';\nimport ChannelThread from '../svgs/channel-thread';\nimport LockedVoiceChannel from '../svgs/locked-voice-channel';\nimport VoiceChannel from '../svgs/voice-channel';\n\n@Component({\n\ttag: 'discord-mention',\n\tstyleUrl: 'discord-mention.css'\n})\nexport class DiscordMention implements ComponentInterface {\n\t/**\n\t * The DiscordMention element\n\t */\n\t@Element()\n\tpublic el: HTMLElement;\n\n\t/**\n\t * Whether this entire message block should be highlighted (to emulate the \"logged in user\" being pinged).\n\t */\n\t@Prop()\n\tpublic highlight = false;\n\n\t/**\n\t * The color to use for this mention. Only works for role mentions and must be in hex format.\n\t */\n\t@Prop()\n\tpublic color: string;\n\n\t/**\n\t * The type of mention this should be. This will prepend the proper prefix character.\n\t * Valid values: `user`, `channel`, `role`, `voice`, `locked`, `thread`, `forum`, and `slash`.\n\t */\n\t@Prop()\n\tpublic type: 'user' | 'channel' | 'role' | 'voice' | 'locked' | 'thread' | 'forum' | 'slash' = 'user';\n\n\t@Watch('type')\n\tpublic handleType(value: string) {\n\t\tif (typeof value !== 'string') {\n\t\t\tthrow new TypeError('DiscordMention `type` prop must be a string.');\n\t\t} else if (!['user', 'channel', 'role', 'voice', 'locked', 'thread', 'forum', 'slash'].includes(value)) {\n\t\t\tthrow new RangeError(\n\t\t\t\t\"DiscordMention `type` prop must be one of: 'user', 'channel', 'role', 'voice', 'locked', 'thread', 'forum', 'slash'\"\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic componentWillRender() {\n\t\tthis.handleType(this.type);\n\t}\n\n\tpublic componentDidLoad() {\n\t\tif (this.color && this.type === 'role') {\n\t\t\tthis.el.addEventListener('mouseover', this.setHoverColor.bind(this));\n\t\t\tthis.el.addEventListener('mouseout', this.resetHoverColor.bind(this));\n\t\t}\n\t}\n\n\tpublic disconnectedCallback() {\n\t\tif (this.color && this.type === 'role') {\n\t\t\tthis.el.removeEventListener('mouseover', this.setHoverColor.bind(this));\n\t\t\tthis.el.removeEventListener('mouseout', this.resetHoverColor.bind(this));\n\t\t}\n\t}\n\n\tpublic setHoverColor() {\n\t\tthis.el.style.backgroundColor = hexToRgba(this.color, 0.3);\n\t}\n\n\tpublic resetHoverColor() {\n\t\tthis.el.style.backgroundColor = hexToRgba(this.color, 0.1);\n\t}\n\n\tpublic render() {\n\t\tconst { color, type }: { color?: string; type?: string } = this;\n\n\t\tconst colorStyle: {\n\t\t\tcolor?: string;\n\t\t\t'background-color'?: string;\n\t\t} = !color || type !== 'role' ? {} : { color, 'background-color': hexToRgba(color, 0.1) };\n\n\t\tlet mentionPrepend = '';\n\n\t\tswitch (this.type) {\n\t\t\tcase 'channel':\n\t\t\t\tmentionPrepend = <ChannelIcon class=\"discord-mention-icon\" />;\n\t\t\t\tbreak;\n\t\t\tcase 'user':\n\t\t\tcase 'role':\n\t\t\t\tmentionPrepend = '@';\n\t\t\t\tbreak;\n\t\t\tcase 'voice':\n\t\t\t\tmentionPrepend = <VoiceChannel class=\"discord-mention-icon\" />;\n\t\t\t\tbreak;\n\t\t\tcase 'locked':\n\t\t\t\tmentionPrepend = <LockedVoiceChannel class=\"discord-mention-icon\" />;\n\t\t\t\tbreak;\n\t\t\tcase 'thread':\n\t\t\t\tmentionPrepend = <ChannelThread class=\"discord-mention-icon\" />;\n\t\t\t\tbreak;\n\t\t\tcase 'forum':\n\t\t\t\tmentionPrepend = <ChannelForum class=\"discord-mention-icon\" />;\n\t\t\t\tbreak;\n\t\t\tcase 'slash':\n\t\t\t\tmentionPrepend = '/';\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn (\n\t\t\t<Host style={colorStyle} class={`discord-mention discord-${type}-mention`}>\n\t\t\t\t{mentionPrepend}\n\t\t\t\t<slot></slot>\n\t\t\t</Host>\n\t\t);\n\t}\n}\n"]}